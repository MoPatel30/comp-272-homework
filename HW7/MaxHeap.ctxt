#BlueJ class context
comment0.target=MaxHeap
comment1.params=
comment1.target=MaxHeap()
comment1.text=\ construct\ an\ empty\ Heap\ using\ ArrayList\r\n\ \ \ with\ root\ at\ index\ 0.\r\n\ \ \ don't\ use\ binary\ tree\ for\ implementing\ the\ heap.\ \ \r\n\ \ \ \r\n\ \ \ Runtime\:\ O(1)\r\n\ \ \ Space\:\ O(1)\r\n
comment10.params=args
comment10.target=void\ main(java.lang.String[])
comment2.params=
comment2.target=java.lang.Comparable\ findMax()
comment2.text=\ returns\ max\ value\r\n\ \r\n\ \ \ Runtime\:\ O(1)\r\n\ \ \ Space\:\ O(1)\r\n
comment3.params=val
comment3.target=void\ addHeap(java.lang.Comparable)
comment3.text=\ adds\ a\ new\ value\ to\ the\ heap\ at\ the\ end\ of\ the\ Heap\ and\ \r\n\ \ \ adjusts\ values\ up\ to\ the\ root\ to\ ensure\ Max\ heap\ property\ is\ satisfied.\r\n\ \ \ parent\ of\ node\ at\ i\ is\ given\ by\ the\ formula\ (i-1)/2\r\n\ \ \ throw\ appropriate\ exception\r\n\ \ \ \r\n\ \ \ Runtime\:\ O(log(N))\r\n\ \ \ Space\:\ O(1)\r\n
comment4.params=nodeIndex
comment4.target=void\ siftUp(int)
comment5.params=
comment5.target=java.lang.Comparable\ removeHeap()
comment5.text=\ returns\ the\ max\ value\ at\ the\ root\ of\ the\ heap\ by\ swapping\ the\ last\ value\ \r\n\ \ \ and\ percolating\ the\ value\ down\ from\ the\ root\ to\ preserve\ max\ heap\ property\r\n\ \ \ children\ of\ node\ at\ i\ are\ given\ by\ the\ formula\ 2i+1,2i+2,\ to\ not\ exceed\ the\r\n\ \ \ bounds\ of\ the\ Heap\ index,\ namely,\ 0\ ...\ size()-1.\r\n\ \ \ throw\ appropriate\ exception\r\n\ \ \ \r\n\ \ \ Runtime\:\ O(log(N))\r\n\ \ \ Space\:\ O(1)\r\n
comment6.params=nodeIndex
comment6.target=void\ siftDown(int)
comment7.params=list
comment7.target=void\ heapSort(java.util.List)
comment7.text=\ takes\ a\ list\ of\ items\ E\ and\ builds\ the\ heap\ and\ then\ prints\ \r\n\ \ \ decreasing\ values\ of\ E\ with\ calls\ to\ removeHeap().\r\n\ \ \ \r\n\ \ \ Runtime\:\ O(N*log(N))\ N\ -\ length\ of\ list\r\n\ \ \ Space\:\ O(N)\ -\ creating\ a\ new\ MaxHeap\ of\ size\ N\ -\ length\ of\ list\r\n
comment8.params=other
comment8.target=void\ heapMerge(MaxHeap)
comment8.text=\ merges\ the\ other\ maxheap\ with\ this\ maxheap\ to\ produce\ a\ new\ maxHeap.\ \r\n\ \ \ \r\n\ \ \ Runtime\:\ O(N*log(N))\ -\ N\ length\ of\ other\ list/heap\ (linear\ for-loop\ *\ log(N)\ add\ method)\r\n\ \ \ Space\:\ O(1)\ \r\n
comment9.params=list
comment9.target=void\ buildHeap(java.util.List)
comment9.text=\ takes\ a\ list\ of\ items\ E\ and\ builds\ the\ heap\ by\ calls\ to\ addHeap(..)\r\n\ \ \ \r\n\ \ \ Runtime\:\ O(N*log(N))\ (linear\ for-loop\ *\ log(N)\ add\ method)\r\n\ \ \ Space\:\ O(1)\r\n
numComments=11
